# Cromwell Containerisation-Agnostic Provider Configuration
# Christopher Harrison <ch12@sanger.ac.uk>

# Copyright (c) 2019 Genomics Research Limited
# Distributed under the GPLv3, or later

actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"

config {
  concurrent-job-limit = 5000
  run-in-background = true

  # TODO Use a different root directory so we can namespace executions
  # by provider (which will make reporting more deterministic)
  root = "cromwell-executions"

  runtime-attributes = """
    # Attempt to compensate for transient failures
    Int?    maxRetries = 3

    # LSF attributes
    String  lsf_group              # Fairshare group
    String? lsf_queue  = "normal"  # Queue name
    Int?    lsf_cores  = 1         # CPU requirement
    Int?    lsf_memory = 1000      # Memory (MB) requirement
    String? lsf_resources          # Arbitrary resource requirements

    # Containerisation attributes
    String? docker                 # Docker image
    String? singularity            # Singularity image

    # FIXME Array[String]? is not allowed here?...
    # Array[String]? mounts = []   # List of directories to mount
    String? mounts = ""            # Comma-delimited mount points
  """

  # FIXME The conditional mode switching is an ugly hack in Bash
  # because WDL doesn't seem to allow me to do such a thing...
  submit = """
    declare MODE
    if [[ -z "${singularity}" ]]; then
      MODE="vanilla"
    else
      MODE="singularity ${singularity}"
      MODE="$MODE --mount ${cwd} --container-working ${cwd}"

      if [[ "${mounts}" ]]; then
        MODE="$MODE --mount ${mounts}"
      fi
    fi

    submit.sh $MODE \
              --name "${job_name}" \
              --group "${lsf_group}" \
              --queue "${lsf_queue}" \
              --cores "${lsf_cores}" \
              --memory "${lsf_memory}" \
              --resources "${lsf_resources}" \
              --working "${cwd}" \
              --stdout "${out}" \
              --stderr "${err}" \
              -- ${script}
  """

  job-id-regex = "Job <(\\d+)>.*"
  kill = "bkill ${job_id}"
  check-alive = "bjobs ${job_id} | grep -Eq 'PEND|RUN'"

  # FIXME? Hardcoded LSF's stdout and stderr to get around
  # Cromwell's Docker assumptions. It presumes that the CWD-based
  # path will always be correct...which it probably won't be.
  submit-docker = """
    declare MOUNTS="${cwd}:${docker_cwd}"
    if [[ "${mounts}" ]]; then
      MOUNTS="$MOUNTS,${mounts}"
    fi

    submit.sh docker "${docker}" \
              --name "${job_name}" \
              --group "${lsf_group}" \
              --queue "${lsf_queue}" \
              --cores "${lsf_cores}" \
              --memory "${lsf_memory}" \
              --resources "${lsf_resources}" \
              --mount $MOUNTS \
              --container-working "${docker_cwd}" \
              --working "${cwd}" \
              --stdout "${cwd}/execution/stdout.lsf" \
              --stderr "${cwd}/execution/stderr.lsf" \
              -- ${script}
  """

  # FIXME Apparently cwd is not available as a variable here
  # kill-docker = """
  #   bkill `grep -Po '(?<=Job <)\d+(?=>)' "${cwd}/execution/stdout.background"`
  # """
}
